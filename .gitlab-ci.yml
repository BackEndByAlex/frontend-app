# ─────────────────────────────────────────────────────────────
# SSH-setup-anchor (endast i deploy-steget)
# ─────────────────────────────────────────────────────────────
.before_script_ssh_setup: &before_script_ssh_setup
  - apk add --no-cache openssh-client
  - eval $(ssh-agent -s)
  - chmod 600 "$SSH_PRIVATE_KEY"
  - ssh-add "$SSH_PRIVATE_KEY"
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  - ssh-keyscan -H "$PRODUCTION_HOST" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# ─────────────────────────────────────────────────────────────
# Config-injektion-anchor (för build-steget)
# ─────────────────────────────────────────────────────────────
.build_config: &build_config
  before_script:
    - mkdir -p config
    - echo "$DOTENV_FILE"  > config/.env
    - echo "$PUBLIC_PEM"   > config/public.pem

# ─────────────────────────────────────────────────────────────
# Basimage och Docker-in-Docker-service för build
# ─────────────────────────────────────────────────────────────
image: docker:27-cli

services:
  - name: docker:27-dind
    alias: docker

variables:
  DOCKER_TLS_CERTDIR: ""        # Stäng av TLS för DinD
  DOCKER_HOST: tcp://docker:2375

stages:
  - build
  - test
  - deploy

# ─────────────────────────────────────────────────────────────
# 1) Build-jobb: injicera config, bygg och pusha imagen
# ─────────────────────────────────────────────────────────────
build-job:
  stage: build
  privileged: true
  <<: *build_config
  script:
    - echo "Bygger frontend-imagen med Docker-in-Docker..."
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  only:
    - main

# ─────────────────────────────────────────────────────────────
# 2) Unit-tester
# ─────────────────────────────────────────────────────────────
unit-test-job:
  stage: test
  script:
    - echo "Kör enhetstester..."
    - sleep 2
    - echo "Code coverage is 90%"

# ─────────────────────────────────────────────────────────────
# 3) Lint
# ─────────────────────────────────────────────────────────────
lint-test-job:
  stage: test
  script:
    - echo "Lintar koden..."
    - sleep 2
    - echo "Inga lint-fel."

# ─────────────────────────────────────────────────────────────
# 4) Deploy till produktion via Docker-over-SSH
# ─────────────────────────────────────────────────────────────
deploy_production_job:
  stage: deploy
  only:
    - main
  environment:
    name: production
    url: http://$PRODUCTION_HOST
  variables:
    PRODUCTION_HOST: cscloud7-142.lnu.se
    DEPLOY_USER:     ubuntu
    DOCKER_HOST:     ssh://$DEPLOY_USER@$PRODUCTION_HOST
  before_script:
    - *before_script_ssh_setup
  script:
    - echo "Deploying to production..."
    - docker compose -f docker-compose.yaml up --build -d
  needs:
    - unit-test-job
    - lint-test-job

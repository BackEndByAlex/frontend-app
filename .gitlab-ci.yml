# ─────────────────────────────────────────────────────────────
# GitLab CI/CD för frontend-app: Build via DinD + Deploy över SSH
# ─────────────────────────────────────────────────────────────

# 1) Basimage med Docker CLI
image: docker:27-cli

# 2) Aktivera Docker-in-Docker som service
services:
  - name: docker:27-dind
    alias: docker

# 3) Globala variabler för DinD
variables:
  # Inaktivera TLS-certifikat för DinD
  DOCKER_TLS_CERTDIR: ""
  # Låt Docker CLI använda dind-servicen
  DOCKER_HOST: tcp://docker:2375

# 4) Pipeline-steg
stages:
  - build
  - deploy

# ─────────────────────────────────────────────────────────────
# SSH-setup (samma som tidigare)
# ─────────────────────────────────────────────────────────────
.before_script_ssh_setup: &before_script_ssh_setup
  - command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install -y openssh-client )
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh && chmod 700 ~/.ssh
  - ssh-keyscan -H "$PRODUCTION_HOST" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# ─────────────────────────────────────────────────────────────
# 1) Build-jobb med DinD
# ─────────────────────────────────────────────────────────────
build-job:
  stage: build

  # Krävs för att DinD ska kunna starta containrar
  privileged: true

  # Om ni injicerar .env/public.pem via File-variabler:
  before_script:
    - mkdir -p config
    - echo "$DOTENV_FILE" > config/.env
    - echo "$PUBLIC_PEM"   > config/public.pem

  script:
    - echo "Bygger frontend-imagen med Docker-in-Docker..."
    - docker build --pull -t $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG .
    - docker login -u gitlab-ci-token -p "$CI_JOB_TOKEN" $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

  only:
    - main

# ─────────────────────────────────────────────────────────────
# 2) Deploy-jobb: SSH + Docker Compose
# ─────────────────────────────────────────────────────────────
deploy-job:
  stage: deploy
  only:
    - main

  variables:
    PRODUCTION_HOST: cscloud7-142.lnu.se
    DEPLOY_USER:     ubuntu

  before_script:
    - *before_script_ssh_setup

  script:
    - echo "Ansluter till $PRODUCTION_HOST och startar om frontenden..."
    - export DOCKER_HOST="ssh://$DEPLOY_USER@$PRODUCTION_HOST"
    - docker compose -f docker-compose.yaml \
                     -f docker-compose.production.yaml \
                     pull
    - docker compose -f docker-compose.yaml \
                     -f docker-compose.production.yaml \
                     up --build -d
